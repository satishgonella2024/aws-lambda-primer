provider "aws" {
  region = "us-east-1"
}

resource "aws_lambda_function" "auto_stop_start_ec2" {
  function_name = "AutoStopStartEC2"
  runtime       = "python3.9"
  role          = aws_iam_role.lambda_exec.arn
  handler       = "lambda_function.lambda_handler"
  filename      = "../devops-lambda/auto-stop-start-ec2/function.zip"
}

resource "aws_lambda_function" "ebs_cleanup" {
  function_name = "EBSCleanup"
  runtime       = "python3.9"
  role          = aws_iam_role.lambda_exec.arn
  handler       = "lambda_function.lambda_handler"
  filename      = "../devops-lambda/ebs-cleanup/function.zip"
}

resource "aws_lambda_function" "rotate_secrets" {
  function_name = "RotateSecrets"
  runtime       = "python3.9"
  role          = aws_iam_role.lambda_exec.arn
  handler       = "lambda_function.lambda_handler"
  filename      = "../devops-lambda/rotate-secrets/function.zip"
}

resource "aws_lambda_function" "security_group_fix" {
  function_name = "SecurityGroupFix"
  runtime       = "python3.9"
  role          = aws_iam_role.lambda_exec.arn
  handler       = "lambda_function.lambda_handler"
  filename      = "../devops-lambda/security-group-fix/function.zip"
}

resource "aws_lambda_function" "slack_alerts" {
  function_name = "SlackAlerts"
  runtime       = "python3.9"
  role          = aws_iam_role.lambda_exec.arn
  handler       = "lambda_function.lambda_handler"
  filename      = "../devops-lambda/slack-alerts/function.zip"
}

resource "aws_lambda_function" "sqs_auto_scale" {
  function_name = "SQSAutoScale"
  runtime       = "python3.9"
  role          = aws_iam_role.lambda_exec.arn
  handler       = "lambda_function.lambda_handler"
  filename      = "../devops-lambda/sqs-auto-scale/function.zip"
}

resource "aws_iam_role" "lambda_exec" {
  name = "LambdaBasicExecutionRole"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [{
      Effect = "Allow"
      Principal = { Service = "lambda.amazonaws.com" }
      Action = "sts:AssumeRole"
    }]
  })
}

resource "aws_iam_role_policy_attachment" "lambda_policy" {
  role       = aws_iam_role.lambda_exec.name
  policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
}